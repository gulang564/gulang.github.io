<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一曲离殇丶笑看人世繁华</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://%E4%B8%80%E6%9B%B2%E7%A6%BB%E6%AE%87%E4%B8%B6%E7%AC%91%E7%9C%8B%E4%BA%BA%E4%B8%96%E7%B9%81%E5%8D%8E.com/"/>
  <updated>2019-03-30T06:50:28.905Z</updated>
  <id>http://一曲离殇丶笑看人世繁华.com/</id>
  
  <author>
    <name>魔道祖师</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://%E4%B8%80%E6%9B%B2%E7%A6%BB%E6%AE%87%E4%B8%B6%E7%AC%91%E7%9C%8B%E4%BA%BA%E4%B8%96%E7%B9%81%E5%8D%8E.com/2019/03/30/%E6%B5%85%E8%B0%88java%E5%92%8Cc++%E4%B8%AD%E7%9A%84%E8%87%AA%E5%B7%B1%E5%8F%91%E7%8E%B0%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>http://一曲离殇丶笑看人世繁华.com/2019/03/30/浅谈java和c++中的自己发现的区别/</id>
    <published>2019-03-30T06:53:12.908Z</published>
    <updated>2019-03-30T06:50:28.905Z</updated>
    
    <content type="html"><![CDATA[<h2 id="浅谈java和c-中的自己发现的区别"><a href="#浅谈java和c-中的自己发现的区别" class="headerlink" title="浅谈java和c++中的自己发现的区别"></a>浅谈java和c++中的自己发现的区别</h2><p>在此输入正文<br>Java中继承只有一重，而c++可以多重继承，</p><p>Java中没有析构函数，多余的内存有Java中的内存清理机制自动清除，不需要程序员管理内存。</p><p>Java是运行在自己的jdk上，而c++可以自己与系统打交道。感觉就是Java和系统之间的距离比c++大，这可能就是影响效率的原因吧。</p><p>Java中没有父类指针指向之类对象这么以说法，但是有一个现象是，父类对象可以被之类对象赋值，并且调用的时候，使用的是子类自己实现的方法。<br>C++还要虚函数，在继承，才可以实现这一功能。这一点Java更人性话。更好理解</p><p>Java中还定义了接口interface<br>接口定义的时候没有具体实现，好像就是说，我这个接口长这个样子，谁想实现这个接口谁实现去，这个不受约束。如果类中声明了已经实现了该接口的话，这个接口对象可以指向不同的实现接口的类的对象，而且指向谁，就调用该类实现的接口方法。</p><p>即使在函数中传入类的对象进去，而函数中实际参数是定义的接口，这以行为是没有问题的。只要实现了该接口的类，都可以传相应自己的对象进入函数，不会报错，接口照样用。</p><p>最近新发现的函数中参数列表，在不确定参数个数的情况下，可以用”…”直接在函数中表示，在利用系统配套函数，进行处理，原来我以为这是Java独有的，但是学数组和广义表的时候，发现C语言中就有这个，所有，我个人感觉，语言的基本用法都是差不多的，像if，while<br>For等等，不管什么语言都是逃不掉的，只是使用的时候大同小异</p><p>Java中的静态方法static叫类方法，静态成员叫类成员变量。<br>可以通过类直接调用该方法和该成员，当然，每个对象也可以调用这些方法，访问这些数据成员，但是不能修改类成员的值，只有类方法可以修改成员变量的值</p><p>Java中的package也就是c++中的.h头文件，打一个包，也就是定义一个头文件的意思，<br>Import也就是#include这个头文件只不过换了一个说法<br>对于近期学习的javaweb，</p><p>Java中的友元函数叫友好方法，就是不用public.private,protect,修饰的（就按前面什么也不加）的就叫有好方法</p><p>Html 就是超文本标记<br>Css 就是层叠样式表<br>Js，可以做动画，基本的逻辑处理，表单的验证等等吧，（当然如果厉害的话，可以实现很炫酷的特效，与后台的通讯也是可以实现的）</p><p>dtd，schema约束，就是说，我规定一个样子出来，你必须要按我规定的样式来，不让就报错。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;浅谈java和c-中的自己发现的区别&quot;&gt;&lt;a href=&quot;#浅谈java和c-中的自己发现的区别&quot; class=&quot;headerlink&quot; title=&quot;浅谈java和c++中的自己发现的区别&quot;&gt;&lt;/a&gt;浅谈java和c++中的自己发现的区别&lt;/h2&gt;&lt;p&gt;在此输入
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://%E4%B8%80%E6%9B%B2%E7%A6%BB%E6%AE%87%E4%B8%B6%E7%AC%91%E7%9C%8B%E4%BA%BA%E4%B8%96%E7%B9%81%E5%8D%8E.com/2019/03/23/hello-world/"/>
    <id>http://一曲离殇丶笑看人世繁华.com/2019/03/23/hello-world/</id>
    <published>2019-03-23T00:40:10.577Z</published>
    <updated>2019-03-23T00:40:10.578Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
